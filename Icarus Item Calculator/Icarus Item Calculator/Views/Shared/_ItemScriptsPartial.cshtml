<script>
    document.addEventListener('DOMContentLoaded', function () {
        const recipeSearch = document.getElementById('recipeSearch');
        const selectedItems = document.getElementById('selectedItems');
        const quantitiesContainer = document.getElementById('quantitiesContainer');
        let searchTimeout;

        // Debounce the search function
        recipeSearch.addEventListener('input', function () {
            clearTimeout(searchTimeout);
            searchTimeout = setTimeout(() => {
                const searchValue = this.value.toLowerCase();
                Array.from(selectedItems.options).forEach(option => {
                    option.style.display = option.text.toLowerCase().includes(searchValue) ? '' : 'none';
                });
            }, 300); // 300ms delay before search is applied
        });

        // Single-click to add/remove items
        selectedItems.addEventListener('click', function (event) {
            if (event.target.tagName === 'OPTION') {
                toggleOption(event.target);
                updateQuantities();
            }
        });

        function toggleOption(option) {
            option.selected = !option.selected;
            option.setAttribute('selected', option.selected ? '' : null);
        }

        function updateQuantities() {
            const selectedOptionValues = Array.from(selectedItems.selectedOptions).map(option => option.value);
            Array.from(quantitiesContainer.querySelectorAll('.quantity-input')).forEach(input => {
                const itemId = input.getAttribute('data-item-id');
                input.style.display = selectedOptionValues.includes(itemId) ? 'block' : 'none';
            });

            if (selectedOptionValues.includes('0')) {
                Array.from(selectedItems.options).forEach(option => {
                    if (option.value !== '0') {
                        option.selected = false;
                        option.setAttribute('selected', null);
                    }
                });
                Array.from(quantitiesContainer.querySelectorAll('.quantity-input')).forEach(input => input.style.display = 'none');
            }
        }

        // Initialize quantities for edit scenario
        updateQuantities();
    });
</script>